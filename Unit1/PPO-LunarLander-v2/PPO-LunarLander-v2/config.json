{"policy_class": {":type:": "<class 'abc.ABCMeta'>", ":serialized:": "gAWVOwAAAAAAAACMIXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5wb2xpY2llc5SMEUFjdG9yQ3JpdGljUG9saWN5lJOULg==", "__module__": "stable_baselines3.common.policies", "__doc__": "\n    Policy class for actor-critic algorithms (has both policy and value prediction).\n    Used by A2C, PPO and the likes.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param share_features_extractor: If True, the features extractor is shared between the policy and value networks.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ", "__init__": "<function ActorCriticPolicy.__init__ at 0x79d95b9c5120>", "_get_constructor_parameters": "<function ActorCriticPolicy._get_constructor_parameters at 0x79d95b9c51c0>", "reset_noise": "<function ActorCriticPolicy.reset_noise at 0x79d95b9c5260>", "_build_mlp_extractor": "<function ActorCriticPolicy._build_mlp_extractor at 0x79d95b9c5300>", "_build": "<function ActorCriticPolicy._build at 0x79d95b9c53a0>", "forward": "<function ActorCriticPolicy.forward at 0x79d95b9c5440>", "extract_features": "<function ActorCriticPolicy.extract_features at 0x79d95b9c54e0>", "_get_action_dist_from_latent": "<function ActorCriticPolicy._get_action_dist_from_latent at 0x79d95b9c5580>", "_predict": "<function ActorCriticPolicy._predict at 0x79d95b9c5620>", "evaluate_actions": "<function ActorCriticPolicy.evaluate_actions at 0x79d95b9c56c0>", "get_distribution": "<function ActorCriticPolicy.get_distribution at 0x79d95b9c5760>", "predict_values": "<function ActorCriticPolicy.predict_values at 0x79d95b9c5800>", "__abstractmethods__": "frozenset()", "_abc_impl": "<_abc._abc_data object at 0x79d95bd45380>"}, "verbose": 1, "policy_kwargs": {}, "num_timesteps": 1000448, "_total_timesteps": 1000000, "_num_timesteps_at_start": 0, "seed": null, "action_noise": null, "start_time": 1747106655014899744, "learning_rate": 0.0003, "tensorboard_log": null, "_last_obs": {":type:": "<class 'numpy.ndarray'>", ":serialized:": "gAWVlgAAAAAAAACME251bXB5Ll9jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWIAAAAAAAAACaiRe74WiauoM/bDczijUymZmRun5tiLYAAIA/AACAP5SMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsIhpSMAUOUdJRSlC4="}, "_last_episode_starts": {":type:": "<class 'numpy.ndarray'>", ":serialized:": "gAWVdQAAAAAAAACME251bXB5Ll9jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWAQAAAAAAAAAAlIwFbnVtcHmUjAVkdHlwZZSTlIwCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksBhZSMAUOUdJRSlC4="}, "_last_original_obs": null, "_episode_num": 0, "use_sde": false, "sde_sample_freq": -1, "_current_progress_remaining": -0.00044800000000000395, "_stats_window_size": 100, "ep_info_buffer": {":type:": "<class 'collections.deque'>", ":serialized:": "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"}, "ep_success_buffer": {":type:": "<class 'collections.deque'>", ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="}, "_n_updates": 4692, "observation_space": {":type:": "<class 'gymnasium.spaces.box.Box'>", ":serialized:": "gAWVdwIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBNudW1weS5fY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QolggAAAAAAAAAAQEBAQEBAQGUaAiMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLCIWUjAFDlHSUUpSMDWJvdW5kZWRfYWJvdmWUaBEolggAAAAAAAAAAQEBAQEBAQGUaBVLCIWUaBl0lFKUjAZfc2hhcGWUSwiFlIwDbG93lGgRKJYgAAAAAAAAAAAAtMIAALTCAACgwAAAoMDbD0nAAACgwAAAAIAAAACAlGgLSwiFlGgZdJRSlIwEaGlnaJRoESiWIAAAAAAAAAAAALRCAAC0QgAAoEAAAKBA2w9JQAAAoEAAAIA/AACAP5RoC0sIhZRoGXSUUpSMCGxvd19yZXBylIxbWy05MC4gICAgICAgIC05MC4gICAgICAgICAtNS4gICAgICAgICAtNS4gICAgICAgICAtMy4xNDE1OTI3ICAtNS4KICAtMC4gICAgICAgICAtMC4gICAgICAgXZSMCWhpZ2hfcmVwcpSMU1s5MC4gICAgICAgIDkwLiAgICAgICAgIDUuICAgICAgICAgNS4gICAgICAgICAzLjE0MTU5MjcgIDUuCiAgMS4gICAgICAgICAxLiAgICAgICBdlIwKX25wX3JhbmRvbZROdWIu", "dtype": "float32", "bounded_below": "[ True  True  True  True  True  True  True  True]", "bounded_above": "[ True  True  True  True  True  True  True  True]", "_shape": [8], "low": "[-90.        -90.         -5.         -5.         -3.1415927  -5.\n  -0.         -0.       ]", "high": "[90.        90.         5.         5.         3.1415927  5.\n  1.         1.       ]", "low_repr": "[-90.        -90.         -5.         -5.         -3.1415927  -5.\n  -0.         -0.       ]", "high_repr": "[90.        90.         5.         5.         3.1415927  5.\n  1.         1.       ]", "_np_random": null}, "action_space": {":type:": "<class 'gymnasium.spaces.discrete.Discrete'>", ":serialized:": "gAWV3AAAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFm51bXB5Ll9jb3JlLm11bHRpYXJyYXmUjAZzY2FsYXKUk5SMBW51bXB5lIwFZHR5cGWUk5SMAmk4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJDCAQAAAAAAAAAlIaUUpSMBXN0YXJ0lGgIaA5DCAAAAAAAAAAAlIaUUpSMBl9zaGFwZZQpjAVkdHlwZZRoDowKX25wX3JhbmRvbZROdWIu", "n": "4", "start": "0", "_shape": [], "dtype": "int64", "_np_random": null}, "n_envs": 1, "n_steps": 1024, "gamma": 0.999, "gae_lambda": 0.98, "ent_coef": 0.01, "vf_coef": 0.5, "max_grad_norm": 0.5, "batch_size": 64, "n_epochs": 4, "clip_range": {":type:": "<class 'function'>", ":serialized:": "gAWV1gIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwiVAZcAiQFTAJROhZQpjAFflIWUjEkvdXNyL2xvY2FsL2xpYi9weXRob24zLjExL2Rpc3QtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lIwEZnVuY5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUS4RDCPiAANgPEogKlEMAlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMSS91c3IvbG9jYWwvbGliL3B5dGhvbjMuMTEvZGlzdC1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpSFlHSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaCF9lH2UKGgYjARmdW5jlIwMX19xdWFsbmFtZV9flIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBmMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP8mZmZmZmZqFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="}, "clip_range_vf": null, "normalize_advantage": true, "target_kl": null, "lr_schedule": {":type:": "<class 'function'>", ":serialized:": "gAWV1gIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwiVAZcAiQFTAJROhZQpjAFflIWUjEkvdXNyL2xvY2FsL2xpYi9weXRob24zLjExL2Rpc3QtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lIwEZnVuY5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUS4RDCPiAANgPEogKlEMAlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMSS91c3IvbG9jYWwvbGliL3B5dGhvbjMuMTEvZGlzdC1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpSFlHSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaCF9lH2UKGgYjARmdW5jlIwMX19xdWFsbmFtZV9flIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBmMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHPzOpKjBVMmGFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="}, "system_info": {"OS": "Linux-6.1.123+-x86_64-with-glibc2.35 # 1 SMP PREEMPT_DYNAMIC Sun Mar 30 16:01:29 UTC 2025", "Python": "3.11.12", "Stable-Baselines3": "2.0.0a5", "PyTorch": "2.6.0+cu124", "GPU Enabled": "True", "Numpy": "2.0.2", "Cloudpickle": "3.1.1", "Gymnasium": "0.28.1", "OpenAI Gym": "0.25.2"}}